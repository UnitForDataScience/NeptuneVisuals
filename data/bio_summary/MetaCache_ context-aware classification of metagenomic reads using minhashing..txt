the supplementary material further in- cludes the results of running metacache with database g2 on the simulated metagenomes presented in which are further evidence of metacache's high classification accuracy.runtime and memory consumptionruntime and memory consumption for classification are measured on a system with a xeon e5-2683v4 cpu with 128 gb of ddr4 ram while runtime and memory consumption for database con- struction are measure on an amd opteron 6272 cpu with 512 gb of ddr3 ram.we compared the classification speed and the peak memory con- sumption during classification of the default versions of kraken clark and metacache in single-threaded mode using five illumina read datasets with read lengths ranging between 80 and 250 bps using the database for g1.

another filtration strategy would select all k-mers whose hash val- ues are multiples of the subsampling factor m 14 4sequence actgactg4-mersactghashactg 14 14ctgahashctga 14 8- select tgachashtgac 14 7gact hashgact 14 11 actg hashactg 14 14this approach selects on average every mth k-mer but does not guar- antee that we sample the sequence in a uniform manner.

in our example we would select the following two 4- mers for s 14 2sequence actgactg4-mersactghashactg 14 14ctgahashctga 14 8 - select tgac hashtgac 14 7 - select gact hashgact 14 11actg hashactg 14 14despite being only a minor modification of the second subsampling approach where we select all k-mer hashes which are multiples of the subsampling factor m minhashing exhibits a desirable mathem- atical property.

metacache is executed in default mode using k 14 16.shows precision sensitivity and f1-score at species and genus level as well as the total percentage of classified reads on any level for metacache and kraken and on genus level for clark using the three reference genome sets g1 g2 g3 and the three metagenomic read sets hiseq miseq and skin9.

the f1-score is further cal- culated as the harmonic mean of precision and sensitivity.kraken and clark are executed in default modes using k 14 31. in addition they are executed in high-sensitivity mode using k 14 20. furthermore clark is executed with its sampling factor set to 8 to create an 8x subsampling of k-mers which yields a database of simi- lar size to metacache for g2.

this produces a look-up table where each entry stores windows containing the same feature.classification step see  a given read r is classified by first computing its sketches of size s. in case a read is longer than the window size l a sketch will be computed for each read win- dow of size l. each sketch member is then used to query the pre- computed feature index.

in addition metacache can exploit the parallelism of modern multi-core cpus using multiple threads to classify a number of read batches in parallel.resultsexperimental setupto test scalability with respect to memory consumption and accuracy of different read classifiers we have created databases for reference genome sets of varying size for the three tested tools metacache kraken v.0.10.5-beta clark v.1.2.3 on a workstation with 512 gb ram using their respective default parameter settings.g1 contains refseq release 73 complete genomes 4696 bac- terial 5765 viral and 231 archaeal genomic sequences with a total of 9.8  109 bases.

the compressed sensing approach is based on solving a linear system to reconstruct the k-mer frequency profile of a sam-ple based on the k-mer frequency profile of reference genomes.in this paper we present a new software tool for read classifica- tion called metacache which index data structure requires signifi- cantly less memory than kraken and clark and is able to achieve both high sensitivity and high precision at comparable classification speed.

our experimental results further show that classification accuracy continuously improves when increasing the amount of utilized reference genome data.approachwhile it has been shown that fast k-mer indexing and look-up can effectively accelerate taxonomic read assignment current state-of- the-art software tools such as kraken and clark still have a few shortcomingsmemory consumption the index data structure storing the k-mers of each reference genome is usually very large e.g.

in order to classify a given read rp a matrix of counters cp of size n x dgmax dl - k th 1the is defined called the window-count statistic wherethe two highest scoring window ranges is larger or equal a prede- fined threshold t default t 14 5. in case the hit count of the best con- tiguous window range exceeds the count of the second best by at least t the read is classified to originate from genome gi1 .

these results are especially encouraging sincetable 5. genusclass-level classification accuracy and total assignment percentage on all levels for metacache up to class level for clark for three real-world datasetsbest precision sensitivity and f1-score values for each reference genome set are indicated in bold.the amount of available reference genome data continues to grow rapidly.the subsampled database for clark clark-k31-8x for g2 has a similar size in memory than the metacache default database for g2.

however corresponding state-of-the-art tools such as kraken and clark employ large k-mer indices and therefore do not scale well in terms of memory consumption for the rapidly increasing number of available reference genomes thus often ex- ceeding the available ram of workstations.our metacache approach aims at context-aware classification providing highly competitive accuracy while consuming significantly less memory than kraken and clark.

due to the large number of reads produced by modern high-throughput sequenc- ing technologies and the rapidly increasing number of available reference genomes corresponding software tools suffer from either long runtimes large memory requirements or low accuracy.results we introduce metacache--a novel software for read classification using the big data tech- nique minhashing.

this is achieved by using subsampling of k-mers based on minhashing making it possible to process very large reference genome collections on standardtable 6. comparison of classification speeds in million reads per minute mrpm averaged over five read datasets and database construc- tion times for each tool running with default parameters using a single cpu threadref.

a recent benchmark study  showed that kraken performed best in a comparison of 14 tested tools among them clark lmat metaphlan motu qiime metaphyler and megan in terms of both read assignment accuracy at genus and phylum levels and clas- sification speed.

